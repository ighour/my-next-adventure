datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique
  username String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password Password?

  createdAdventures          Adventure[] @relation("Adventure_createdAdventures")
  joinedAdventures          Adventure[] @relation("Adventure_joinedAdventures")

  invite   Invite?   @relation(fields: [inviteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  inviteId String?
  invitedAt DateTime?
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Invite {
  id    String @id @default(cuid())

  type String // EInviteType
  code String @unique

  expireAt DateTime?
  remainingUses Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  adventure   Adventure?   @relation(fields: [adventureId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adventureId String?
}

model AdventureTemplate {
  id          String @id @default(cuid())
  title       String @unique
  description String
  coverImage String?
  maxJoiners Int
  nextChallengeRevealHours Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  challengeTemplates ChallengeTemplatesOnAdventureTemplates[]
  adventures          Adventure[]
}

model ChallengeTemplate {
  id          String @id @default(cuid())
  title       String @unique
  description String
  notePlaceholder String?
  costEuros  Decimal
  timeOfDay String // ETimeOfDay
  durationMinutes  Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  adventureTemplates ChallengeTemplatesOnAdventureTemplates[]
  challenges Challenge[]
  hints HintsOnChallengeTemplates[]
}

model ChallengeTemplatesOnAdventureTemplates {
  id          String @id @default(cuid())

  adventureTemplate       AdventureTemplate     @relation(fields: [adventureTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adventureTemplateId     String
  challengeTemplate       ChallengeTemplate     @relation(fields: [challengeTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  challengeTemplateId     String

  position    Int

  assignedAt DateTime @default(now())

  @@unique([adventureTemplateId, challengeTemplateId])
  @@unique([adventureTemplateId, position])
}

model Adventure {
  id String @id @default(cuid())
  title       String
  description String
  coverImage String?
  maxJoiners Int
  nextChallengeRevealHours Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creator   User @relation("Adventure_createdAdventures", fields: [creatorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  creatorId String

  joiners      User[] @relation("Adventure_joinedAdventures")
  challenges Challenge[]

  invites Invite[]

  // @note - Just for reference. Avoid going through it. We may have Free Adventures in future, not coupled to templates.
  adventureTemplate   AdventureTemplate @relation(fields: [adventureTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adventureTemplateId String
}

model Challenge {
  id        String  @id @default(cuid())
  canBeRevealedAt DateTime?
  revealedAt  DateTime?
  completedAt DateTime?
  note      String?
  completedImage String?
  position    Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  adventure   Adventure @relation(fields: [adventureId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  adventureId String

  challengeTemplate   ChallengeTemplate @relation(fields: [challengeTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  challengeTemplateId String
}

model Hint {
  id        String  @id @default(cuid())
  name      String // EHint

  challengeTemplates HintsOnChallengeTemplates[]
}

model HintsOnChallengeTemplates {
  id        String  @id @default(cuid())

  challengeTemplate       ChallengeTemplate     @relation(fields: [challengeTemplateId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  challengeTemplateId     String
  hint   Hint @relation(fields: [hintId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  hintId String
  assignedAt DateTime @default(now())

  @@unique([challengeTemplateId, hintId])
}
